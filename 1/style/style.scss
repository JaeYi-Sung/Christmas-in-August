// 모든 테그를 지칭하는 표시 *
// 박스는 보더 박스, 포지션 릴레이티브

$primary : #FF4E79;
$sub_primary: #B9EEFF;  


*{
    box-sizing: border-box;
    position: relative;
}

body{
    margin : 0;
    padding: 0;
    background: $sub_primary;
    font-family: 'Noto Sans KR', sans-serif;
}

// scss를 쓰는 이유 
// 변수를 쓰기 위해서 : 여러번 색이 사용되었을때 바로 바꿀 수 있어서
// 스타일을 중첩하기 위해서 

h1{
    font-family: 'Bebas Neue', sans-serif;
    color: $primary;
}

.background{
    // 가로 정렬 -> 부모에 flex 적용시켜주기
    display: flex;
    justify-content: space-between;
    width: 100%;
    height: 100vh;  //view 포트 전체 = vh = viewport height
    position: absolute;     //스크롤시 고정할지 안할지 -> 중첩되어 있으면 absolute (스크롤 가능)
    padding: 0 16px;    //상하에는 0px, 좌우에는 16px 
    //0 16px 16px - 상 좌우 하
    span{
        display: block;
        height: 100%;
        background: linear-gradient(180deg, rgba(255, 255, 255, 0.81) 0%, rgba(217, 217, 217, 0.00) 100%, rgba(112, 186, 255, 0.00) 100%);;
        width: calc(100% / 9 - 2.7vw);
        margin-right: 2.7vw;

        &:last-child{
            margin-right: 0;
        }
    }
}


.main{
    //100vh 모두 사용, 가운데 정렬 -> flex로

    min-height: 100vh;
    display: flex;
    justify-content: center;    //가로 정렬
    align-items: center;    //세로 정렬
    flex-direction: column;     //아이템 위아래 정렬


    h1{
        position: absolute;
        bottom: 1.5rem;
        margin: 0;
        font-size: 2.5rem;
    }

}

.logo-holder{
    display: flex;
    justify-content: center;        //이미지 반응형에서 잘리지 않게 하려고

    img{

        width: calc((100vw - 2rem) / 12 * 7);    //대략적인 위치 맞추기
    }
}

.heart-holder{

    margin: 3.75rem 0;      //rem이 기본 마진값 (위에서 지정한 것인듯? 16px)
}